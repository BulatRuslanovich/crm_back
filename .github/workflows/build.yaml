name: Build Validation

on:
  push:
    branches: [ master ]
    paths:
      - '**.cs'
      - '**.csproj'
  pull_request:
    branches: [ master ]
    paths:
      - '**.cs'
      - '**.csproj'

env:
  DOTNET_VERSION: '8.0.x'
  BUILD_CONFIG: 'Release'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Cache NuGet packages
      uses: actions/cache@v4
      with:
        path: ~/.nuget/packages
        key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj') }}
        restore-keys: |
          ${{ runner.os }}-nuget-
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
    - name: Check code formatting
      run: dotnet format --verify-no-changes --severity warn
    - name: Restore dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --configuration ${{ env.BUILD_CONFIG }} --no-restore

  test:
    runs-on: ubuntu-latest
    needs: build
    if: success()
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Cache NuGet packages
      uses: actions/cache@v4
      with:
        path: ~/.nuget/packages
        key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj') }}
        restore-keys: |
          ${{ runner.os }}-nuget-
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
    - name: Restore dependencies
      run: dotnet restore
    - name: Print environment info
      run: |
        dotnet --version
        dotnet --info
    - name: Run unit tests with coverage
      run: dotnet test --no-restore --verbosity normal /p:CollectCoverage=true /p:CoverletOutputFormat=opencover
    - name: Upload test results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: test-results
        path: '**/*.trx'
    - name: Upload coverage to Codecov
      if: success()
      uses: codecov/codecov-action@v4
      with:
        files: ./coverage.opencover.xml
        token: ${{ secrets.CODECOV_TOKEN }}

  notify:
    runs-on: ubuntu-latest
    needs: [build, test]
    if: always()
    steps:
    - name: Debug job statuses
      run: |
        echo "Build status: ${{ needs.build.result }}"
        echo "Test status: ${{ needs.test.result }}"
    - name: Notify Telegram
      uses: appleboy/telegram-action@v1.0.0
      with:
        to: ${{ secrets.TELEGRAM_CHAT_ID }}
        token: ${{ secrets.TELEGRAM_BOT_TOKEN }}
        message: |
          ${{ (needs.build.result == 'success' && needs.test.result == 'success') && '✅ Build and unit tests succeeded!' || '❌ Build or unit tests failed!' }}
          Repository: ${{ github.repository }}
          Branch: ${{ github.ref }}
          Commit: ${{ github.sha }}
          By: ${{ github.actor }}
          Details: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}