name: Build

on:
  push:
    branches: [master]
    paths: ['**.cs', '**.csproj']
  pull_request:
    branches: [master]
    paths: ['**.cs', '**.csproj']

env:
  DOTNET_VERSION: '8.0.x'
  BUILD_CONFIG: 'Release'

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Cache NuGet packages
      uses: actions/cache@v4
      with:
        path: ~/.nuget/packages
        key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj') }}
        restore-keys: ${{ runner.os }}-nuget-
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
    
    - name: Restore dependencies
      run: dotnet restore
    
    - name: Check code formatting
      run: dotnet format CrmBack.sln --verify-no-changes --severity warn
    
    - name: Build
      run: dotnet build --configuration ${{ env.BUILD_CONFIG }} --no-restore

  notify:
    runs-on: ubuntu-latest
    needs: [build-and-test]
    if: always()
    steps:
    - name: Send Telegram notification
      uses: appleboy/telegram-action@v1.0.0
      with:
        to: ${{ secrets.TELEGRAM_CHAT_ID }}
        token: ${{ secrets.TELEGRAM_BOT_TOKEN }}
        message: |
          ${{ needs.build-and-test.result == 'success' && '✅ Build successful!' || '❌ Build failed!' }}
          
          Backend build: ${{ needs.build-and-test.result }}
          
          Repository: ${{ github.repository }}
          Branch: ${{ github.ref_name }}
          Commit: ${{ github.event.head_commit.message }}
          Author: ${{ github.actor }}
          
          Details: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
